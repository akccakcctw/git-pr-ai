import { IssueDetails, ImplementationPlan } from './types'

/**
 * Formats the implementation plan as a Markdown section.
 *
 * @param plan The ImplementationPlan object, including overview, tasks, prerequisites, testingStrategy, and suggestedBranchName fields.
 * @returns A string containing the formatted Implementation Plan in Markdown.
 *
 * Example of returned Markdown:
 *
 * ## üõ†Ô∏è Implementation Plan
 *
 * ### Overview
 * [plan.overview]
 *
 * ### Implementation Tasks
 * 1. **Task Title** (High priority, ~2d)
 *    Task description...
 * 2. **Another Task** (Medium priority, ~1d)
 *    Another task description...
 *
 * ### Prerequisites
 * - Prerequisite 1
 * - Prerequisite 2
 *
 * ### Testing Strategy
 * - Testing step 1
 * - Testing step 2
 *
 * ### Suggested Branch
 * `feature/issue-123-implement-x`
 */
export function formatPlanSection(plan: ImplementationPlan): string {
  return `## =ÔøΩ Implementation Plan

### Overview
${plan.overview}

### Implementation Tasks
${plan.tasks
  .map(
    (task, index) => `
${index + 1}. **${task.title}** (${task.priority} priority, ~${task.estimatedTime})
   ${task.description}`,
  )
  .join('')}

### Prerequisites
${plan.prerequisites.map((req) => `- ${req}`).join('\n')}

### Testing Strategy
${plan.testingStrategy.map((strategy) => `- ${strategy}`).join('\n')}

### Suggested Branch
\`${plan.suggestedBranchName}\``
}

/**
/**
 * Format the ImplementationPlan object as a Markdown section.
 *
 * @param plan The ImplementationPlan object, including overview, tasks, prerequisites, testingStrategy, and suggestedBranchName fields.
 * @returns A string containing the formatted Implementation Plan in Markdown.
 *
 * Example of returned Markdown:
 *
 * ## üõ†Ô∏è Implementation Plan
 *
 * ### Overview
 * [plan.overview]
 *
 * ### Implementation Tasks
 * 1. **Task Title** (High priority, ~2d)
 *    Task description...
 * 2. **Another Task** (Medium priority, ~1d)
 *    Another task description...
 *
 * ### Prerequisites
 * - Prerequisite 1
 * - Prerequisite 2
 *
 * ### Testing Strategy
 * - Testing step 1
 * - Testing step 2
 *
 * ### Suggested Branch
 * `feature/issue-123-implement-x`
 */
export function formatUpdatedIssueBody(
  issue: IssueDetails,
  plan: ImplementationPlan,
): string {
  return `${issue.body}

---

${formatPlanSection(plan)}
`
}

/**
 * Format the ImplementationPlan object as a comment in the issue.
 *
 * @param plan The ImplementationPlan object, including overview, tasks, prerequisites, testingStrategy, and suggestedBranchName fields.
 * @returns A string containing the formatted Implementation Plan in Markdown.
 *
 * Example of returned Markdown:
 *
 * ## üõ†Ô∏è Implementation Plan
 *
 * ### Overview
 * [plan.overview]
 *
 * ### Implementation Tasks
 * 1. **Task Title** (High priority, ~2d)
 *    Task description...
 * 2. **Another Task** (Medium priority, ~1d)
 *    Another task description...
 *
 * ### Prerequisites
 * - Prerequisite 1
 * - Prerequisite 2
 *
 * ### Testing Strategy
 * - Testing step 1
 * - Testing step 2
 *
 * ### Suggested Branch
 * `feature/issue-123-implement-x`
 *
 * ---
 * *Implementation plan generated by git-plan-issue CLI*
 */
export function formatPlanComment(plan: ImplementationPlan): string {
  return formatPlanSection(plan)
}
